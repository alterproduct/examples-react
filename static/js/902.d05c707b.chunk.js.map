{"version":3,"file":"static/js/902.d05c707b.chunk.js","mappings":"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","sources":["pages/advancedProductMediaGallery/components/responseApi.js","pages/advancedProductMediaGallery/components/Mediabuttons.js","pages/advancedProductMediaGallery/components/VideoComponent.js","pages/advancedProductMediaGallery/components/DisplayMedia.js","pages/advancedProductMediaGallery/components/AdvancedProductMediaGallery.js"],"sourcesContent":["export const responseApi = [\n  {\n    type: 'img',\n    urlThumb:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_0_thumb.png',\n    urlContent:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_0_big.png',\n    alt: 'T-Shirt front',\n  },\n  {\n    type: 'img',\n    urlThumb:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_1_thumb.png',\n    urlContent:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_1_big.png',\n    alt: 'T-Shirt back',\n  },\n  {\n    type: 'video',\n    urlThumb:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_2_thumb.png',\n    urlContent:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_0_big.png',\n    alt: 'T-Shirt video thumbnail',\n  },\n  {\n    type: 'viewer3D',\n    urlThumb:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_3_thumb.png',\n    urlContent:\n      process.env.PUBLIC_URL + '/assets/image/tshirt/black/image_0_big.png',\n    alt: 'T-Shirt 3D Viewer thumbnail',\n  },\n];\n","const MediaButtons = ({ responseApi, selectedPreview, setSelectedPreview }) => {\n  const buttonClickHandler = (index) => {\n    setSelectedPreview(index);\n  };\n\n  return (\n    <div id=\"buttonsWrapper\">\n      {responseApi.map((item, index) => (\n        <div\n          key={'buttonMedia' + index}\n          className={`buttonContainer ${\n            selectedPreview === index ? 'active' : ''\n          }`}\n          onClick={() => buttonClickHandler(index)}\n        >\n          <img src={item.urlThumb} alt={item.alt} className=\"imgThumb\" />\n\n          {item.type === 'video' ? (\n            <img\n              src={process.env.PUBLIC_URL + '/assets/icons/icon-play-video.svg'}\n              alt={'Play video'}\n              className=\"button-icon\"\n            />\n          ) : null}\n\n          {item.type === 'viewer3D' ? (\n            <img\n              src={process.env.PUBLIC_URL + '/assets/icons/icon-3d.svg'}\n              alt={'Open 3D Viewer'}\n              className=\"button-icon\"\n            />\n          ) : null}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MediaButtons;\n","import videojs from 'video.js'; // npm install video.js\nimport 'video.js/dist/video-js.css'; // comes along with video.js lib\nimport React, { useEffect, useRef } from 'react';\n\nconst VideoComponent = ({ displayWrapperRef }) => {\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n\n  const updateSize = () => {\n    if (!playerRef.current || !displayWrapperRef.current) return;\n\n    const player = playerRef.current;\n    const container = displayWrapperRef.current;\n\n    const containerWidth = container.clientWidth;\n    const containerHeight = container.clientHeight;\n    const containerRatio = containerWidth / containerHeight;\n\n    const videoWidth = player.videoWidth();\n    const videoHeight = player.videoHeight();\n    const videoRatio = videoWidth / videoHeight;\n\n    if (videoRatio > containerRatio) {\n      player.width(containerWidth);\n      player.height(containerWidth / videoRatio);\n    } else {\n      player.height(containerHeight);\n      player.width(containerHeight * videoRatio);\n    }\n  };\n\n  useEffect(() => {\n    // Ensure the player is initialized only once\n    if (!playerRef.current && videoRef.current) {\n      const video = Object.assign(document.createElement('video'), {\n        id: 'my-video',\n        className: 'video-js',\n        loop: true,\n        autoplay: true,\n        muted: true,\n        preload: 'auto',\n      });\n      video.setAttribute('data-setup', '{\"asdf\": true }');\n\n      videoRef.current.appendChild(video);\n\n      // Initialize Video.js player with configuration\n      playerRef.current = videojs(\n        video,\n        {\n          loop: true,\n          autoplay: true,\n          muted: true,\n          preload: 'auto',\n          sources: [\n            {\n              src:\n                process.env.PUBLIC_URL +\n                '/assets/video/video-360-loop-embeding.webm',\n              type: 'video/webm',\n            },\n          ],\n        },\n        function () {\n          videojs.log('player is ready');\n        }\n      );\n\n      playerRef.current.on('loadedmetadata', () => {\n        updateSize();\n        window.addEventListener('resize', updateSize);\n      });\n\n      // Cleanup\n      return () => {\n        if (playerRef.current && !playerRef.current.isDisposed()) {\n          playerRef.current.dispose();\n          playerRef.current = null;\n        }\n\n        window.removeEventListener('resize', updateSize);\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div className=\"videoContainer\" ref={videoRef} />;\n};\n\nexport default VideoComponent;\n","import React, { useRef } from 'react';\nimport VideoComponent from './VideoComponent';\n\nconst DisplayMedia = ({ responseApi, selectedPreview }) => {\n  const displayWrapperRef = useRef(null);\n\n  return (\n    <div id=\"displayWrapper\" ref={displayWrapperRef}>\n      {responseApi[selectedPreview].type === 'img' ? (\n        <img\n          src={responseApi[selectedPreview].urlContent}\n          alt={responseApi[selectedPreview].alt}\n        />\n      ) : null}\n\n      {responseApi[selectedPreview].type === 'video' ? (\n        <VideoComponent displayWrapperRef={displayWrapperRef} />\n      ) : null}\n\n      {responseApi[selectedPreview].type === 'viewer3D' ? (\n        <iframe\n          loading=\"lazy\"\n          title=\"Product Viewer\"\n          src=\"https://alterproduct.com/app/viewer/1\"\n          width=\"100%\"\n          height=\"100%\"\n          frameBorder=\"0\"\n          allowFullScreen\n        ></iframe>\n      ) : null}\n    </div>\n  );\n};\n\nexport default DisplayMedia;\n","import React, { useState } from 'react';\n\nimport './Styles.css';\n\nimport { responseApi } from './responseApi';\n\nimport MediaButtons from './Mediabuttons';\nimport DisplayMedia from './DisplayMedia';\n\nconst AdvancedProductMediaGallery = () => {\n  const [selectedPreview, setSelectedPreview] = useState(0);\n\n  return (\n    <div id=\"wrapper\">\n      <DisplayMedia\n        responseApi={responseApi}\n        selectedPreview={selectedPreview}\n      />\n      <MediaButtons\n        responseApi={responseApi}\n        selectedPreview={selectedPreview}\n        setSelectedPreview={setSelectedPreview}\n      />\n    </div>\n  );\n};\n\nexport default AdvancedProductMediaGallery;\n"],"names":["responseApi","type","urlThumb","process","urlContent","alt","_ref","selectedPreview","setSelectedPreview","_jsx","id","children","map","item","index","_jsxs","className","concat","onClick","buttonClickHandler","src","displayWrapperRef","videoRef","useRef","playerRef","updateSize","current","player","container","containerWidth","clientWidth","containerHeight","clientHeight","containerRatio","videoRatio","videoWidth","videoHeight","width","height","useEffect","video","Object","assign","document","createElement","loop","autoplay","muted","preload","setAttribute","appendChild","videojs","sources","log","on","window","addEventListener","isDisposed","dispose","removeEventListener","ref","VideoComponent","loading","title","frameBorder","allowFullScreen","AdvancedProductMediaGallery","useState","DisplayMedia","MediaButtons"],"sourceRoot":""}